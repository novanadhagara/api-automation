<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="0" total="10" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-18T16:32:09 WIB" name="ParallelSuite" finished-at="2025-05-18T16:32:12 WIB" duration-ms="3554">
    <groups>
    </groups>
    <test started-at="2025-05-18T16:32:09 WIB" name="ParallelRegression" finished-at="2025-05-18T16:32:12 WIB" duration-ms="3554">
      <class name="testng.RetryTest">
        <test-method retried="true" signature="flackyTest()[pri:0, instance:testng.RetryTest@40fe8fd5]" started-at="2025-05-18T16:32:09 WIB" name="flackyTest" finished-at="2025-05-18T16:32:09 WIB" duration-ms="12" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testng.RetryTest.flackyTest(RetryTest.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:545)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)
at java.base/java.lang.Thread.run(Thread.java:1447)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flackyTest -->
        <test-method retried="true" signature="flackyTest()[pri:0, instance:testng.RetryTest@40fe8fd5]" started-at="2025-05-18T16:32:09 WIB" name="flackyTest" finished-at="2025-05-18T16:32:09 WIB" duration-ms="0" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testng.RetryTest.flackyTest(RetryTest.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:565)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:545)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:328)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)
at java.base/java.lang.Thread.run(Thread.java:1447)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flackyTest -->
        <test-method signature="flackyTest()[pri:0, instance:testng.RetryTest@40fe8fd5]" started-at="2025-05-18T16:32:09 WIB" name="flackyTest" finished-at="2025-05-18T16:32:09 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flackyTest -->
      </class> <!-- testng.RetryTest -->
      <class name="testng.SimpleTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:09 WIB" name="setUp" finished-at="2025-05-18T16:32:09 WIB" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:09 WIB" name="beforeTest" finished-at="2025-05-18T16:32:09 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:09 WIB" name="beforeClass" finished-at="2025-05-18T16:32:09 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:09 WIB" name="beforeMethod" finished-at="2025-05-18T16:32:09 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:09 WIB" name="testMethod" finished-at="2025-05-18T16:32:10 WIB" duration-ms="1009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:10 WIB" name="afterMethod" finished-at="2025-05-18T16:32:10 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:10 WIB" name="beforeMethod" finished-at="2025-05-18T16:32:10 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod2()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:10 WIB" name="testMethod2" finished-at="2025-05-18T16:32:12 WIB" depends-on-methods="testng.SimpleTest.testMethod" duration-ms="2002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:12 WIB" name="afterMethod" finished-at="2025-05-18T16:32:12 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testMethod3()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:12 WIB" name="testMethod3" finished-at="2025-05-18T16:32:12 WIB" depends-on-methods="testng.SimpleTest.testMethod2" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:12 WIB" name="beforeMethod" finished-at="2025-05-18T16:32:12 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:12 WIB" name="afterMethod" finished-at="2025-05-18T16:32:12 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:12 WIB" name="afterTest" finished-at="2025-05-18T16:32:12 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:12 WIB" name="afterClass" finished-at="2025-05-18T16:32:12 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testng.SimpleTest@bb12f41]" started-at="2025-05-18T16:32:12 WIB" name="tearDown" finished-at="2025-05-18T16:32:12 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testng.SimpleTest -->
      <class name="testng.DataProviderTest">
        <test-method signature="testMethod(int,java.lang.String)[pri:0, instance:testng.DataProviderTest@7ab2ba47]" started-at="2025-05-18T16:32:09 WIB" name="testMethod" data-provider="dataProvider" finished-at="2025-05-18T16:32:09 WIB" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[active]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method signature="testMethod(int,java.lang.String)[pri:0, instance:testng.DataProviderTest@7ab2ba47]" started-at="2025-05-18T16:32:09 WIB" name="testMethod" data-provider="dataProvider" finished-at="2025-05-18T16:32:09 WIB" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4567]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[inactive]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method signature="testMethod(int,java.lang.String)[pri:0, instance:testng.DataProviderTest@7ab2ba47]" started-at="2025-05-18T16:32:09 WIB" name="testMethod" data-provider="dataProvider" finished-at="2025-05-18T16:32:09 WIB" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1255]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[active]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
      </class> <!-- testng.DataProviderTest -->
      <class name="testng.AssertTest">
        <test-method signature="testMethod()[pri:0, instance:testng.AssertTest@3739f3c9]" started-at="2025-05-18T16:32:09 WIB" name="testMethod" finished-at="2025-05-18T16:32:09 WIB" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
      </class> <!-- testng.AssertTest -->
    </test> <!-- ParallelRegression -->
  </suite> <!-- ParallelSuite -->
</testng-results>
